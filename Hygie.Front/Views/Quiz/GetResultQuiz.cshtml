@model Tuple<List<string>, List<string>, List<string>, List<string>, List<string>>; // On utilise un Tuple pour passer plusieurs listes

@{
    ViewData["Title"] = "Vos résultats";
    int nbRecommandationsImportantes = Model.Item1.Count;
    int nbRecommandationsImportantesMoyennes = Model.Item2.Count;
    int nbRecommandationsMoyennes = Model.Item3.Count;
    int nbRecommandationsPresque = Model.Item4.Count;
    int nbRecommandationsFelicitations = Model.Item5.Count;
}

<h1>@ViewData["Title"]</h1>

<div class="result">

    @if (nbRecommandationsImportantes > 0)
    {
        <h2>Attention : tu as @nbRecommandationsImportantes points que tu ne respectes pas du tout !</h2>
        foreach (var item in Model.Item1)
        {
            <p>@item</p>
        }
    }

    @if (nbRecommandationsImportantesMoyennes > 0)
    {
        <h2>Attention : tu as @nbRecommandationsImportantesMoyennes points que tu ne respectes presque pas !</h2>
        foreach (var item in Model.Item2)
        {
            <p>@item</p>
        }
    }

    @if (nbRecommandationsMoyennes > 0)
    {
        <h2>Pas mal, tu as @nbRecommandationsMoyennes points à moitié respectés !</h2>
        foreach (var item in Model.Item3)
        {
            <p>@item</p>
        }
    }

    @if (nbRecommandationsPresque > 0)
    {
        <h2>Presque, tu as @nbRecommandationsPresque que tu remplis quasiment comme il faut !</h2>
        foreach (var item in Model.Item4)
        {
            <p>@item</p>
        }
    }

    @if (nbRecommandationsFelicitations > 0)
    {
        <h2>Parfait, tu as @nbRecommandationsFelicitations que tu remplis parfaitement !</h2>
        foreach (var item in Model.Item5)
        {
            <p>@item</p>
        }
    }

</div>
